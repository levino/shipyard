---
import Footer from './Footer.astro'
import '../../src/globals.css'
import config from 'virtual:shipyard/config'
import { mapObjIndexed } from 'ramda'
import type { NavigationEntry, NavigationTree, Script } from '../../src/schemas/config'
import { getTitle } from '../../src/tools/title'
import { GlobalDesktopNavigation, SidebarNavigation } from '../components'

type Props = {
  frontmatter?: {
    title?: string
    description?: string
    sidebarNavigation?: NavigationTree
  }
} & {
  title?: string
  description?: string
  sidebarNavigation?: NavigationTree
}

const currentPath = Astro.url.pathname
const props = Astro.props.frontmatter || Astro.props

const withLocale = (path: string) => `/${Astro.currentLocale}${path}`
const applyLocaleAndSetActive: (navigation: NavigationTree) => NavigationTree =
  mapObjIndexed((entry: NavigationEntry) => ({
    ...entry,
    ...(entry.href ? { href: withLocale(entry.href) } : {}),
    active: entry.href === currentPath,
    ...(entry.subEntry
      ? { subEntry: applyLocaleAndSetActive(entry.subEntry) }
      : {}),
  }))

const navigation = applyLocaleAndSetActive(config.navigation)
const title = getTitle(config.title, props.title)

// Helper function to render script attributes
const renderScriptAttributes = (script: Script) => {
  if (typeof script === 'string') {
    return { src: script }
  }
  return script
}
---

<html>
  <head>
    <meta charset="utf-8" />
    <link rel="sitemap" href="/sitemap-index.xml" />
    <title>
      {title}
    </title>
    <meta name="viewport" content="width=device-width, initial-scale=1" />
    <meta name="description" content={props.description} />
    <meta property="og:title" content={title} />
    <meta property="og:description" content={props.description} />
    
    {config.scripts?.map((script) => {
      const attrs = renderScriptAttributes(script)
      return <script is:inline {...attrs}></script>
    })}
  </head>
  <body>
    <div class="drawer lg:drawer-open">
      <input id="drawer" type="checkbox" class="drawer-toggle" />
      <div class="drawer-content">
        <div class="flex min-h-screen flex-col">
          <GlobalDesktopNavigation
            showBrand={!props.sidebarNavigation}
            brand={config.brand}
            navigation={navigation}
          />
          <div class="grow">
            <div class="mx-auto px-4">
              <slot />
            </div>
          </div>
          <Footer />
        </div>
      </div>

      <div class="drawer-side z-40">
        <label for="drawer" aria-label="close sidebar" class="drawer-overlay"
        ></label>
        <div>
          <SidebarNavigation
            brand={config.brand}
            global={navigation}
            local={props.sidebarNavigation}
          />
        </div>
      </div>
    </div>
  </body>
</html>
