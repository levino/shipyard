---
import type { Config } from "../../src/schemas/config";
import { cn } from "../../src/tools/cn";

type Props = Pick<Config, "brand" | "navigation"> & { showBrand: boolean };

const { brand, navigation, showBrand = false } = Astro.props as Props;
---

<div class="navbar z-10 bg-base-100">
  <span
    class="tooltip tooltip-bottom before:text-xs before:content-[attr(data-tip)]"
    data-tip="Menu"
  >
    <label
      aria-label="Open menu"
      for="drawer"
      class="btn btn-square btn-ghost drawer-button lg:hidden"
    >
      <svg
        width="20"
        height="20"
        xmlns="http://www.w3.org/2000/svg"
        fill="none"
        viewBox="0 0 24 24"
        class="inline-block h-5 w-5 stroke-current md:h-6 md:w-6"
      >
        <path
          stroke-linecap="round"
          stroke-linejoin="round"
          stroke-width="2"
          d="M4 6h16M4 12h16M4 18h16"></path>
      </svg>
    </label>
  </span>
  <div class="flex-1">
    <a
      href="/"
      class={cn("btn btn-ghost text-xl", {
        "md:hidden": !showBrand,
      })}
    >
      {brand}
    </a>
  </div>
  <div class="hidden flex-none lg:flex">
    <ul class="menu menu-horizontal px-1">
      {
        Object.entries(navigation).map(([key, entry]) =>
          entry.subEntry ? (
            <li>
              <details>
                <summary>{entry.label ?? key}</summary>
                <ul class="rounded-t-none bg-base-100 p-2">
                  {Object.entries(entry.subEntry).map(([key, entry]) => (
                    <li>
                      <a href={entry.href}>{entry.label ?? key}</a>
                    </li>
                  ))}
                </ul>
              </details>
            </li>
          ) : (
            <li>
              <a href={entry.href}>{entry.label ?? key}</a>
            </li>
          ),
        )
      }
    </ul>
  </div>
</div>
