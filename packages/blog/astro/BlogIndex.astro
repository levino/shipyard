---
import { getCollection } from 'astro:content'
import config from 'virtual:shipyard/config'
import type { GetStaticPaths } from 'astro'
import Layout from './Layout.astro'

export const getStaticPaths = (() => {
  if (config.i18n) {
    return config.i18n.locales.map((locale) => {
      if (typeof locale !== 'string') {
        throw new Error('Shipyard does only support strings as locales.')
      }
      return {
        params: {
          locale,
        },
      }
    })
  } else {
    // For non-i18n, return a single path without locale
    return [{ params: {} }]
  }
}) satisfies GetStaticPaths

const entries = await getCollection('blog').then((posts) => {
  if (config.i18n) {
    // With i18n: filter by locale
    return posts
      .filter(({ id }) => {
        const [postLocale] = id.split('/')
        return postLocale === Astro.currentLocale
      })
      .toSorted((a, b) => b.data.date.getTime() - a.data.date.getTime())
  } else {
    // Without i18n: return all posts
    return posts.toSorted(
      (a, b) => b.data.date.getTime() - a.data.date.getTime(),
    )
  }
})

const getBlogPostLink = (id: string, locale?: string) => {
  if (config.i18n && locale) {
    return id.replace(`${locale}/`, `${locale}/blog/`)
  } else {
    return `blog/${id}`
  }
}

const formatDate = new Intl.DateTimeFormat(Astro.currentLocale || 'en').format
---

<Layout title="Blog">
  <div class="mx-auto max-w-prose px-8">
    {
      entries.map(async (entry) => (
        <a class="block my-8" href={`/${getBlogPostLink(entry.id, Astro.currentLocale)}`}>
          <div class="prose">
            <div class="text-sm">{formatDate(entry.data.date)}</div>
            <h2 class="my-0">{entry.data.title}</h2>
            <p>{entry.data.description}</p>
          </div>
        </a>
      ))
    }
  </div>
</Layout>
