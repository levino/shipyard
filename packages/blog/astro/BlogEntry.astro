---
import { getCollection, render } from 'astro:content'
import config from 'virtual:shipyard/config'
import { TableOfContents } from '@levino/shipyard-base/components'
import Layout from './Layout.astro'

export const getStaticPaths = async () => {
  const blogPosts = await getCollection('blog')

  // Check if i18n is configured using Shipyard's config
  const hasI18n = Boolean(config.i18n)

  const getParams = (slug: string, hasI18n: boolean) => {
    if (hasI18n) {
      const [locale, ...rest] = slug.split('/')
      return {
        slug: rest.join('/'),
        locale,
      }
    } else {
      // For non-i18n, treat the entire slug as the path
      return {
        slug: slug,
      }
    }
  }

  return blogPosts.map((entry) => ({
    params: getParams(entry.id, hasI18n),
    props: { entry },
  }))
}

const { entry } = Astro.props
const { Content, headings } = await render(entry)
---

<Layout title={entry.data.title}>
  <div>
    <div class="prose mx-auto w-full px-8">
      <Content />
    </div>
    <TableOfContents links={headings} />
  </div>
</Layout>
