---
import { getCollection, render } from 'astro:content'
import type { NavigationTree } from '@levino/shipyard-base'
import BaseLayout from '@levino/shipyard-base/layouts/Page.astro'
import { Array as EffectArray, Option } from 'effect'
import { path } from 'ramda'
import { toSidebarEntries } from '../src/sidebarEntries'

const getPath = (id: string) => `/${Astro.currentLocale}/docs/${id.slice(3)}`

const docs = await getCollection('docs')
  .then(
    EffectArray.map(async (doc) => {
      const {
        id,
        data: {
          title,
          sidebar: { render: shouldBeRendered, label },
        },
      } = doc
      return {
        path: getPath(id),
        title:
          label ??
          title ??
          Option.getOrUndefined(
            EffectArray.findFirst(
              (await render(doc)).headings,
              ({ depth }) => depth === 1,
            ),
          )?.text ??
          id,
        link: shouldBeRendered,
      }
    }),
  )
  .then((promises) => Promise.all(promises))

const entries = path([Astro.currentLocale, 'subEntry', 'docs', 'subEntry'])(
  toSidebarEntries(docs),
) as NavigationTree
---

<BaseLayout sidebarNavigation={entries}>
  <div class="prose mx-auto">
    <slot />
  </div>
</BaseLayout>
