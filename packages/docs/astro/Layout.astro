---
import { getCollection, render } from 'astro:content'
import BaseLayout from '@levino/shipyard-base/layouts/Page.astro'
import { toSidebarEntries } from '../src/sidebarEntries'
import { path } from 'ramda'
import type { NavigationTree } from '@levino/shipyard-base'
import { Array, Option } from 'effect'
import config from 'virtual:shipyard/config'

const locale = (Astro.currentLocale as string) ?? config.defaultLocale
const getPath = (id: string) =>
  locale === config.defaultLocale
    ? `/docs/${id}`
    : `/${locale}/docs/${id.slice(3)}`
const docs = await getCollection('docs')
  .then(
    Array.map(async (doc) => {
      const {
        id,
        data: {
          title,
          sidebar: { render: shouldBeRendered, label },
        },
      } = doc
      return {
        path: getPath(id),
        title:
          label ??
          title ??
          Option.getOrUndefined(
            Array.findFirst(
              (await render(doc)).headings,
              ({ depth }) => depth === 1,
            ),
          )?.text ??
          id,
        link: shouldBeRendered,
      }
    }),
  )
  .then(Promise.all.bind(Promise))

const entries = (
  locale == config.defaultLocale
    ? path(['docs', 'subEntry'])
    : path([locale, 'subEntry', 'docs', 'subEntry'])
)(toSidebarEntries(docs)) as NavigationTree
---

<BaseLayout sidebarNavigation={entries}>
  <div class="prose mx-auto">
    <slot />
  </div>
</BaseLayout>
